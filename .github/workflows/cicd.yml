name: Deploy Node Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            nikhil2523/chat-app-backend:latest
            nikhil2523/chat-app-backend:${{ github.sha }}

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Stop existing container
        run: docker stop node-js-app-container || true
        continue-on-error: true

      - name: Remove existing container
        run: docker rm node-js-app-container || true
        continue-on-error: true

      - name: Pull Image from Docker Hub
        run: docker pull nikhil2523/chat-app-backend:latest

      - name: Run Docker Container
        run: |
          docker run -d \
            --name node-js-app-container \
            --restart unless-stopped \
            -p 3000:3000 \
            -e MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            -e NODE_ENV=production \
            nikhil2523/chat-app-backend:latest

      - name: Health Check
        run: |
          timeout=60
          while [ $timeout -gt 0 ]; do
            if curl -f http://localhost:3000/health; then
              echo "Application is healthy"
              exit 0
            fi
            sleep 5
            timeout=$((timeout-5))
          done
          echo "Health check failed"
          exit 1